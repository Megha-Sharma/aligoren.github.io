<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ali GÖREN (programlama)</title><link>http://aligoren.github.io/</link><description></description><atom:link type="application/rss+xml" rel="self" href="http://aligoren.github.io/categories/programlama.xml"></atom:link><language>tr</language><lastBuildDate>Mon, 04 May 2015 15:58:20 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Sublime Text'i Go IDE'sine Çevirin</title><link>http://aligoren.github.io/posts/sublime-text-golang-ide.html</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;Go dili programcıları arttıkça kaliteli editör, ide arayışları da aynı orantıda artmakta.&lt;/p&gt;
&lt;p&gt;Python, C, C++, Ruby, Java, PHP, Javascript gibi aklınıza gelebilecek diller için IDE bulmak kolay. Bu diller hem kendisini kanıtlamış hem de uzun geçmişe sahip olan diller.&lt;/p&gt;
&lt;p&gt;Eğer arkanızda Microsoft gibi dev yoksa o zaman Visual Studio gibi bir IDE bulmanız şans işi. Diğer firmaları da sıralayacak olursak JetBrains, Xamarin gibi firmalar da mevcut. Bu firmaların da kaliteli ürünleri olsa dahi aradığınız dil için özellikle sağladıkları bir destek yok. Yani buradan da arayış yapmanız pek bir kar sağlamıyor.&lt;/p&gt;
&lt;p&gt;Gelelim yeni nesil diller konusuna. Bu dillerde aslında yeni nesil olmayanlar var ama popülerliğin son yıllardaki artışına bakarak söylemek gerekiyor.&lt;/p&gt;
&lt;p&gt;D dili, Haskell, Erlang, CoffeeScript, Dart, Lua, R, Scala ve Go&lt;/p&gt;
&lt;p&gt;Bu dillerden en az birisini duymuşsunuzdur. Örneğin CoffeeScript eğer CoffeeScript için WebStorm olmamış olsaydı gerçekten ciddi destek sağlayan bir IDE yok. Fakat WebStorm da ücretli bir IDE olduğu için yine işiniz kullanıcıya kalıyor.&lt;/p&gt;
&lt;p&gt;Haskell'a gelelim. Eğer Leksah gibi bir IDE desteği olmamış olsaydı ki bunu kendisi sağlamıyor yine bir kullanıcı ürünü eğer bu destek olmamış olsaydı yine işiniz pek iyi değildi. &lt;/p&gt;&lt;p&gt;&lt;a href="http://aligoren.github.io/posts/sublime-text-golang-ide.html"&gt;Devamını oku…&lt;/a&gt; (2 dakikalık okuma)&lt;/p&gt;&lt;/div&gt;</description><category>go</category><category>ide</category><category>programlama</category><category>sublime</category><category>sublime text</category><guid>http://aligoren.github.io/posts/sublime-text-golang-ide.html</guid><pubDate>Mon, 04 May 2015 14:48:39 GMT</pubDate></item><item><title>Python ile Görsel Karşılaştırma</title><link>http://aligoren.github.io/posts/python-gorsel-karsilastirma.html</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;Görseller ve benzerlikleri daima ilgimi çekmiştir. Nasıl karşılaştırılırlar diye.
Benzerlik algoritmaları (örn: levenshtein) bu yüzden ilgimi çeker.
Görselleri karşılaştırırken bu algoritmalardan yararlanmak nedense aklımın ucundan dahi geçmedi.
Daha çok görselleri byte olarak okuyup bu byte'ları karşılaştırmayı düşündüm.
Python bunun için çeşitli kolaylıklar sağlamakta. Örneğin kendisi hazır built-in fonksiyonlar dahi sunmakta.&lt;/p&gt;
&lt;p&gt;Bu fonksiyonlardan birisi &lt;code&gt;filecmp&lt;/code&gt; modülü. Bu modülün &lt;code&gt;cmp&lt;/code&gt; işlevi bulunmakta. Bu işlev file comparasion işlemi yapmakta.
Yani dosya karşılaştırma işlevi. Örneği şöyle iki adet görsel var elimizde: &lt;/p&gt;&lt;p&gt;&lt;a href="http://aligoren.github.io/posts/python-gorsel-karsilastirma.html"&gt;Devamını oku…&lt;/a&gt; (1 dakikalık okuma)&lt;/p&gt;&lt;/div&gt;</description><category>compare</category><category>comparing</category><category>image</category><category>pil</category><category>pillow</category><category>programlama</category><category>python</category><guid>http://aligoren.github.io/posts/python-gorsel-karsilastirma.html</guid><pubDate>Fri, 01 May 2015 17:23:22 GMT</pubDate></item><item><title>Python ve Asyncio</title><link>http://aligoren.github.io/posts/python-ve-asyncio.html</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;Bu yazıda Python'ın bir kütüphanesini tanıtacağım. Aslında varlığından haberdar olsam da araştırmalarım kısa süre önce başladı. Kısa süre önce Guido ile
twitter üzerinden şu sistem nasıl yapılır, bu sistem nasıl yazılır gibi sohbet soru-cevap &lt;a href="https://twitter.com/gvanrossum/status/588112508042502144"&gt;yapıyorduk&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;O da bana X benzeri bir sistemi yazmak istiyorsan, o konuda X kadar yıl tecrübe edip eksiğini gediğini görmen lazım dedi. Yani onu anlaman lazım dedi.
Eğer onu anlarsam o konuda kendimi geliştirebilirmişim. Daha sonra ise kendisine kendisinin favori kütüphanesinin ne olduğunu sormaya çalıştım
fakat &lt;strong&gt;our&lt;/strong&gt; olarak yazmışım klavye azizliği neyse işte sordum.
Kendisi bana &lt;a href="https://github.com/python/asyncio"&gt;asyncio&lt;/a&gt; kütüphanesini &lt;a href="https://twitter.com/gvanrossum/status/588165930301132800"&gt;önerdi&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Daha sonra bu kütüphaneyi araştırmaya başladım. Anladığım kadarını aktarmaya çalışayım. Yanlış bilgilendirmelerim olursa düzeltme gelirse sevirim :)&lt;/p&gt;
&lt;h3&gt;Asenkron Programlama Nedir?&lt;/h3&gt;
&lt;p&gt;Bir uygulama olduğunu düşünün. Bu uygulama aynı anda birden fazla işlem yapmak zorunda. Eğer bu tarz bir uygulamaya sahipseniz asenkron(asynchronous) yani
eşzamansız programlama tam ihtiyacınız olan konu.&lt;/p&gt;
&lt;p&gt;I/O işlemleri yapılırken, tek bir thread, o işlemin sonucunu beklemekle uğraşmaz. Bu esnada başka işler de yapılır.
Paralel programlama ile karıştırılmaması gerekmekte. Çünkü paralel programlama I/O işlemi olup olmadığına bakmaksızın her şey paralel olarak çalıştırır.
Bu durumdan dolayı da paralel yapılması gereken işlemler için fazladan thread gerekir. Eğer işlemci thread sayısına yetecek kadar çekirdeğe sahip değilse
aynı çekirdek daha fazla thread arasında dolaşmak zorunda kalır bu da performansı olumsuz etkiler. &lt;/p&gt;&lt;p&gt;&lt;a href="http://aligoren.github.io/posts/python-ve-asyncio.html"&gt;Devamını oku…&lt;/a&gt; (4 dakikalık okuma)&lt;/p&gt;&lt;/div&gt;</description><category>asyncio</category><category>network</category><category>programlama</category><category>python</category><guid>http://aligoren.github.io/posts/python-ve-asyncio.html</guid><pubDate>Thu, 30 Apr 2015 20:56:13 GMT</pubDate></item><item><title>Visual Studio Code</title><link>http://aligoren.github.io/posts/visual-studio-code.html</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;Microsoft'un son dönemde açık kaynak dünyasına verdiği bir başka yazılım oluyor kendisi. 12 Kasım 2014'te .NET açık kaynak kodlu ve cross platform &lt;a href="http://blogs.msdn.com/b/somasegar/archive/2014/11/12/opening-up-visual-studio-and-net-to-every-developer-any-application-net-server-core-open-source-and-cross-platform-visual-studio-community-2013-and-preview-of-visual-studio-2015-and-net-2015.aspx"&gt;olmuştu&lt;/a&gt;. Linux ve Mac OS X kullanıcıları için güzel bir haberdi. Bugüne kadar dem vurduğumuz noktalardan birisi kapalı kaynak koddu. Tabii ki bu Microsoft'un pazar stratejisi vs. Bu konu yayılım, pazar payı gibi etkenleri yorumlayanlar için bir haber özelliği taşıyor.&lt;/p&gt;
&lt;p&gt;Bugün yani aslında dün Electron bir tweet attı.&lt;/p&gt;
&lt;blockquote class="twitter-tweet" lang="tr"&gt;&lt;p&gt;Visual Studio Code is an Electron app &lt;a href="https://t.co/RyzJjVyutG"&gt;https://t.co/RyzJjVyutG&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/Build2015?src=hash"&gt;#Build2015&lt;/a&gt;&lt;/p&gt;— Electron (@electronjs) &lt;a href="https://twitter.com/electronjs/status/593464848228450304"&gt;29 Nisan 2015&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;O tweete göre, Visual Studio Code yayınlanmış ve yayınlanan VSC bir Electron uygulaması imiş. Bu uygulamanın cross platform olduğunu söylemek gerek. Hatta Somasegar bir tweetinde şöyle bir ekran görüntüsü atmıştı. (Tweet görünmüyorsa tıklayın bi zahmet :P)
&lt;/p&gt;&lt;p&gt;&lt;a href="http://aligoren.github.io/posts/visual-studio-code.html"&gt;Devamını oku…&lt;/a&gt; (1 dakikalık okuma)&lt;/p&gt;&lt;/div&gt;</description><category>haber</category><category>linux</category><category>programlama</category><category>teknoloji</category><category>windows</category><category>yazılım</category><guid>http://aligoren.github.io/posts/visual-studio-code.html</guid><pubDate>Wed, 29 Apr 2015 21:19:12 GMT</pubDate></item><item><title>Python: zip yerine map kullanın</title><link>http://aligoren.github.io/posts/zip-yerine-map.html</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;Birbirine paralel listeler olduğunu düşünelim. Birbirine paralel olarak da çıktılarının olması gerekiyor. Bunu yapabilmek için &lt;code&gt;zip&lt;/code&gt; kullanılabilir.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;zaman&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;42.12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;42.28&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;42.34&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;42.40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;42.45&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;kisiler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Ali'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Hakan'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Can'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Gurcan'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;formatli&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'{:20} {:.2f}'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;formatli&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kisiler&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;zaman&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="n"&gt;Ali&lt;/span&gt;                  &lt;span class="mf"&gt;42.12&lt;/span&gt;
&lt;span class="n"&gt;Hakan&lt;/span&gt;                &lt;span class="mf"&gt;42.28&lt;/span&gt;
&lt;span class="n"&gt;Can&lt;/span&gt;                  &lt;span class="mf"&gt;42.54&lt;/span&gt;
&lt;span class="n"&gt;Gurcan&lt;/span&gt;               &lt;span class="mf"&gt;42.60&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;Biraz daha basite indirirsek şöyle yazılabilir.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;formatli&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;zk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;zk&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kisiler&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;zaman&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="n"&gt;Ali&lt;/span&gt;                  &lt;span class="mf"&gt;42.12&lt;/span&gt;
&lt;span class="n"&gt;Hakan&lt;/span&gt;                &lt;span class="mf"&gt;42.28&lt;/span&gt;
&lt;span class="n"&gt;Can&lt;/span&gt;                  &lt;span class="mf"&gt;42.54&lt;/span&gt;
&lt;span class="n"&gt;Gurcan&lt;/span&gt;               &lt;span class="mf"&gt;42.60&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;Bunun yerine ayrıca itertools da kullanılabilir. itertool'sun starmap özelliği kullanılabilir.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;starmap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;formatli&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kisiler&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;zaman&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
&lt;span class="n"&gt;Ali&lt;/span&gt;                  &lt;span class="mf"&gt;42.12&lt;/span&gt;
&lt;span class="n"&gt;Hakan&lt;/span&gt;                &lt;span class="mf"&gt;42.28&lt;/span&gt;
&lt;span class="n"&gt;Can&lt;/span&gt;                  &lt;span class="mf"&gt;42.54&lt;/span&gt;
&lt;span class="n"&gt;Gurcan&lt;/span&gt;               &lt;span class="mf"&gt;42.60&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;Bunu şu tarz bir hata alırsanız kullanmanız gerekebilir.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;formatli&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kisiler&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;zaman&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="ne"&gt;IndexError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;tuple&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;Bu en son hali ise gayet düzgün ve temiz görünüyor. İkili dizileri açmada bunu kullanabiliriz.&lt;/p&gt;
&lt;p&gt;Unutmadan, &lt;code&gt;map&lt;/code&gt; bir eşitlikten fazlasını alabilir. Bundan sonra &lt;code&gt;zip&lt;/code&gt; kullanmanıza gerek yok.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;formatli&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kisiler&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;zaman&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="n"&gt;Ali&lt;/span&gt;                  &lt;span class="mf"&gt;42.12&lt;/span&gt;
&lt;span class="n"&gt;Hakan&lt;/span&gt;                &lt;span class="mf"&gt;42.28&lt;/span&gt;
&lt;span class="n"&gt;Can&lt;/span&gt;                  &lt;span class="mf"&gt;42.54&lt;/span&gt;
&lt;span class="n"&gt;Gurcan&lt;/span&gt;               &lt;span class="mf"&gt;42.60&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><category>liste</category><category>map</category><category>programlama</category><category>python</category><category>zip</category><guid>http://aligoren.github.io/posts/zip-yerine-map.html</guid><pubDate>Tue, 28 Apr 2015 21:23:42 GMT</pubDate></item><item><title>syspy Windows Sistem Bilgi Kütüphanesi</title><link>http://aligoren.github.io/posts/syspy-windows-python.html</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Not: Yazı Sonunda Paylaşılan Python Hosted Linki Doxygen ile Hazırlanmıştır. Class Diagramları ve Açıklamaları Görebilirsiniz.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Python ile windows sistem bilgilerini görüntülemek için win32 ya da psutil kütüphanelerinin kurulmuş olması gerekmekte. Ancak bunlarla dahi tam görüntülenemez. Aslında görüntülenir ama sürekli bir uğraş vermek zorunda kalırsınız.&lt;/p&gt;
&lt;p&gt;Sürekli bir iterasyon işlemi şart olur. Can sıkıntısına biraz uğraşayım dedim ve sonunda &lt;a href="https://pypi.python.org/pypi/syspy"&gt;PyPi&lt;/a&gt; üzerinde paylaşabileceğim ekstra bir kütüphane ortaya çıktı.&lt;/p&gt;
&lt;p&gt;Aslında benim işimi görüyor. Windows kullandığım vakitlerde lazım olan bilgileri almamı sağlıyor. &lt;/p&gt;&lt;p&gt;&lt;a href="http://aligoren.github.io/posts/syspy-windows-python.html"&gt;Devamını oku…&lt;/a&gt; (1 dakikalık okuma)&lt;/p&gt;&lt;/div&gt;</description><category>programlama</category><category>psutil</category><category>python</category><category>sys</category><category>windows</category><guid>http://aligoren.github.io/posts/syspy-windows-python.html</guid><pubDate>Sun, 26 Apr 2015 21:08:20 GMT</pubDate></item><item><title>Python Name Parser</title><link>http://aligoren.github.io/posts/name-parser.html</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;Name Parser, basitleştirilmiş bir isim ayrıştırıcıdır. Girilen ad, soyad kombinasyonunu duruma göre ayıklar.&lt;/p&gt;
&lt;p&gt;Çıkt formatı şu örneğe göre iki türlüdür.&lt;/p&gt;
&lt;table border="1" style="background-color:#FFFFFF;border-collapse:collapse;border:1px solid #000000;color:#000000;width:100%" cellpadding="3" cellspacing="4"&gt;
    &lt;tr&gt;
        &lt;td&gt;&lt;strong&gt;Name&lt;/strong&gt;&lt;/td&gt;
        &lt;td&gt;&lt;strong&gt;Name&lt;/strong&gt;&lt;/td&gt;
        &lt;td&gt;&lt;strong&gt;Surname&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;Ali&lt;/td&gt;
        &lt;td&gt;Opcode&lt;/td&gt;
        &lt;td&gt;GOREN&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Burada 2 adet Name ve 1 adet Surname çıktısı var. Soyadın tek olmadığı durumlar var. Örneğin evlilik gibi durumlar. Maalesef bunu algılayabilmek için bir soyadı ve isim listesi gerekmekte.&lt;/p&gt;
&lt;h2&gt;Kullanım:&lt;/h2&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;name&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;NameParser&lt;/span&gt;

&lt;span class="n"&gt;np&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;NameParser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Ali Opcode GOREN'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;Bu şekilde bir kullanım yukarıdaki tablonun çıktısını verecektir. Aslında çıktı formatı şöyle oluyor :)&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;

&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Ali&lt;/span&gt;
&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Opcode&lt;/span&gt;
&lt;span class="n"&gt;Surname&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;GOREN&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;Kullanımı görüldüğü gibi çok basittir.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Github Linki: &lt;/strong&gt; &lt;a href="https://github.com/aligoren/NameParser"&gt;Name Parser&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PyPi Linki: &lt;/strong&gt; &lt;a href="https://pypi.python.org/pypi/ParseNames"&gt;Name Parser&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>name</category><category>name parsing</category><category>parser</category><category>programlama</category><category>python</category><guid>http://aligoren.github.io/posts/name-parser.html</guid><pubDate>Thu, 23 Apr 2015 22:02:57 GMT</pubDate></item><item><title>Python Logging Library</title><link>http://aligoren.github.io/posts/python-logging-library.html</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;h2&gt;Installation:&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;python setup.py install&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Usage:&lt;/h2&gt;
&lt;p&gt;Using is simple. There is a sample code below&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;handan&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;LogSaver&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;handan&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;logMachine&lt;/span&gt;

&lt;span class="nd"&gt;@logMachine&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;

&lt;span class="n"&gt;log&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LogSaver&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;warn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'This is tests the WARN logging call'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;You can also look &lt;strong&gt;test.py&lt;/strong&gt; file.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Github Repository Link:&lt;/strong&gt; &lt;a href="https://github.com/aligoren/handan"&gt;handan&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;What's Handan?&lt;/h2&gt;
&lt;p&gt;Handan is a &lt;a href="http://www.idefix.com/kitap/handan-halide-edib-adivar/tanim.asp?sid=D6ANJ7OKH0208OYQGXWM"&gt;book&lt;/a&gt;. Also my ex girlfriend's name.&lt;/p&gt;&lt;/div&gt;</description><category>library</category><category>logger</category><category>logging</category><category>programlama</category><category>python</category><guid>http://aligoren.github.io/posts/python-logging-library.html</guid><pubDate>Wed, 22 Apr 2015 23:12:09 GMT</pubDate></item><item><title>Kolay Yoldan Flask Framework</title><link>http://aligoren.github.io/posts/kolay-yoldan-flask.html</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;Flask framework python ile yazılmış genişletilebilir br microframework olarak da tanımlanabilir. Ancak yaptıklarına baktığınızda pek de mikro olmadığını görebilirsiniz.&lt;/p&gt;
&lt;p&gt;Benim gibi django'yu, rails'i karmaşık bulanlar için Flask framework mükemmeldir.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Flask Framework Kurulumu&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Flask framework'ü kurmak için konsoldan şu komutu vermeniz yeterlidir.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pip install Flask&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Bu adımdan sonra artık Flask kurulmuş olmalı. Eğer burada bir sorun yaşıyorsanız hatalara bakıp o hataları gidermeye çalışın.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Olası Hatalar&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Windows ile kurulum yapıyorsanız yönetici izni gerekebilir. Linux için bahsetme gereği duymadım pek çünkü zaten Linux ile kurarken sudo komutunu girmeniz gerektiğini bildiğinizi varsayıyorum. &lt;/p&gt;&lt;p&gt;&lt;a href="http://aligoren.github.io/posts/kolay-yoldan-flask.html"&gt;Devamını oku…&lt;/a&gt; (1 dakikalık okuma)&lt;/p&gt;&lt;/div&gt;</description><category>flask</category><category>framework</category><category>programlama</category><category>python</category><guid>http://aligoren.github.io/posts/kolay-yoldan-flask.html</guid><pubDate>Sun, 19 Apr 2015 10:22:36 GMT</pubDate></item><item><title>Windows'a Ruby on Rails Kurulumu</title><link>http://aligoren.github.io/posts/install-rails-on-windows.html</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;Ruby on Rails yani RoR, Ruby'nin en gelişmiş web frameworklerinden biridir. Bu yazı yazıldığı vakitlerde en güncel sürümü 4.2'dir.
Sitesine &lt;a href="http://rubyonrails.org/"&gt;bu&lt;/a&gt; linkten ulaşabilirsiniz.&lt;/p&gt;
&lt;p&gt;Windows'a Ruby kurulabilir ancak Rails gibi frameworklerin kurulumunda sıkıntı yaşanmakta. Bunun için &lt;strong&gt;RailsInstaller&lt;/strong&gt; sitesi işi kolaylaştırıcı
bir kurulum aracı hazırlamış. Şu an Windows ve Mac Os X için kurulum dosyaları bulunmakta.&lt;/p&gt;
&lt;p&gt;RailsIntaller'a bu adresten gidebilirsiniz: &lt;a href="http://railsinstaller.org/en"&gt;http://railsinstaller.org/en&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Aşağıda kendinize uygun Ruby sürümünü seçip indirme yapabilirsiniz.&lt;/p&gt;
&lt;p&gt;RailInstaller gerekli olan bütün eklentileri içinde barındırıyor. Örneğin:&lt;/p&gt;
&lt;p&gt;DevKit, Bundler, Sqlite, Git, TinyTDS ve SQL Server Support özellikleri.&lt;/p&gt;
&lt;p&gt;Tabii ki Mac için var olan özellikler daha fazla.&lt;/p&gt;
&lt;p&gt;Eğer daha detaylı bir kurulum yardımına ihtiyacınız varsa &lt;strong&gt;InstallRails&lt;/strong&gt; sitesine gidebilirsiniz. &lt;strong&gt;START NOW&lt;/strong&gt; butonuna tıklayarak size ait işletim sistemini
seçip, kurulum dökümanlarına ulaşabilirsiniz.&lt;/p&gt;
&lt;p&gt;Örneğin Windows bu linkten başlıyor: &lt;a href="http://installrails.com/steps/railsinstaller_windows"&gt;http://installrails.com/steps/railsinstaller_windows&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Kurulum sonrasında bundle işleminde hata alanlar buraya bakabilirler: &lt;a href="http://aligoren.github.io/posts/ruby-bundle-install-error.html"&gt;Ruby Bundle Install Error&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;İyi çalışmalar&lt;/p&gt;&lt;/div&gt;</description><category>programlama</category><category>rails</category><category>ror</category><category>ruby</category><category>windows</category><guid>http://aligoren.github.io/posts/install-rails-on-windows.html</guid><pubDate>Sat, 18 Apr 2015 09:41:48 GMT</pubDate></item></channel></rss>