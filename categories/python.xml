<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Ali GÖREN (python)</title><link>http://aligoren.github.io/</link><description></description><atom:link href="http://aligoren.github.io/categories/python.xml" rel="self" type="application/rss+xml"></atom:link><language>tr</language><lastBuildDate>Thu, 23 Apr 2015 22:33:41 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Python Name Parser</title><link>http://aligoren.github.io/posts/name-parser.html</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;Name Parser, basitleştirilmiş bir isim ayrıştırıcıdır. Girilen ad, soyad kombinasyonunu duruma göre ayıklar.&lt;/p&gt;
&lt;p&gt;Çıkt formatı şu örneğe göre iki türlüdür.&lt;/p&gt;
&lt;table border="1" style="background-color:#FFFFFF;border-collapse:collapse;border:1px solid #000000;color:#000000;width:100%" cellpadding="3" cellspacing="4"&gt;
    &lt;tr&gt;
        &lt;td&gt;&lt;strong&gt;Name&lt;/strong&gt;&lt;/td&gt;
        &lt;td&gt;&lt;strong&gt;Name&lt;/strong&gt;&lt;/td&gt;
        &lt;td&gt;&lt;strong&gt;Surname&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;Ali&lt;/td&gt;
        &lt;td&gt;Opcode&lt;/td&gt;
        &lt;td&gt;GOREN&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Burada 2 adet Name ve 1 adet Surname çıktısı var. Soyadın tek olmadığı durumlar var. Örneğin evlilik gibi durumlar. Maalesef bunu algılayabilmek için bir soyadı ve isim listesi gerekmekte.&lt;/p&gt;
&lt;h2&gt;Kullanım:&lt;/h2&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;name&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;NameParser&lt;/span&gt;

&lt;span class="n"&gt;np&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;NameParser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Ali Opcode GOREN'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;Bu şekilde bir kullanım yukarıdaki tablonun çıktısını verecektir. Aslında çıktı formatı şöyle oluyor :)&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;

&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Ali&lt;/span&gt;
&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Opcode&lt;/span&gt;
&lt;span class="n"&gt;Surname&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;GOREN&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;Kullanımı görüldüğü gibi çok basittir.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Github Linki: &lt;/strong&gt; &lt;a href="https://github.com/aligoren/NameParser"&gt;Name Parser&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PyPi Linki: &lt;/strong&gt; &lt;a href="https://pypi.python.org/pypi/ParseNames"&gt;Name Parser&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>name</category><category>name parsing</category><category>parser</category><category>programlama</category><category>python</category><guid>http://aligoren.github.io/posts/name-parser.html</guid><pubDate>Thu, 23 Apr 2015 22:02:57 GMT</pubDate></item><item><title>Python Logging Library</title><link>http://aligoren.github.io/posts/python-logging-library.html</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;h2&gt;Installation:&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;python setup.py install&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Usage:&lt;/h2&gt;
&lt;p&gt;Using is simple. There is a sample code below&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;handan&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;LogSaver&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;handan&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;logMachine&lt;/span&gt;

&lt;span class="nd"&gt;@logMachine&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;

&lt;span class="n"&gt;log&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LogSaver&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;warn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'This is tests the WARN logging call'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;You can also look &lt;strong&gt;test.py&lt;/strong&gt; file.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Github Repository Link:&lt;/strong&gt; &lt;a href="https://github.com/aligoren/handan"&gt;handan&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;What's Handan?&lt;/h2&gt;
&lt;p&gt;Handan is a &lt;a href="http://www.idefix.com/kitap/handan-halide-edib-adivar/tanim.asp?sid=D6ANJ7OKH0208OYQGXWM"&gt;book&lt;/a&gt;. Also my ex girlfriend's name.&lt;/p&gt;&lt;/div&gt;</description><category>library</category><category>logger</category><category>logging</category><category>programlama</category><category>python</category><guid>http://aligoren.github.io/posts/python-logging-library.html</guid><pubDate>Wed, 22 Apr 2015 23:12:09 GMT</pubDate></item><item><title>Kolay Yoldan Flask Framework</title><link>http://aligoren.github.io/posts/kolay-yoldan-flask.html</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;Flask framework python ile yazılmış genişletilebilir br microframework olarak da tanımlanabilir. Ancak yaptıklarına baktığınızda pek de mikro olmadığını görebilirsiniz.&lt;/p&gt;
&lt;p&gt;Benim gibi django'yu, rails'i karmaşık bulanlar için Flask framework mükemmeldir.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Flask Framework Kurulumu&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Flask framework'ü kurmak için konsoldan şu komutu vermeniz yeterlidir.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pip install Flask&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Bu adımdan sonra artık Flask kurulmuş olmalı. Eğer burada bir sorun yaşıyorsanız hatalara bakıp o hataları gidermeye çalışın.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Olası Hatalar&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Windows ile kurulum yapıyorsanız yönetici izni gerekebilir. Linux için bahsetme gereği duymadım pek çünkü zaten Linux ile kurarken sudo komutunu girmeniz gerektiğini bildiğinizi varsayıyorum. &lt;/p&gt;&lt;p&gt;&lt;a href="http://aligoren.github.io/posts/kolay-yoldan-flask.html"&gt;Devamını oku…&lt;/a&gt; (1 dakikalık okuma)&lt;/p&gt;&lt;/div&gt;</description><category>flask</category><category>framework</category><category>programlama</category><category>python</category><guid>http://aligoren.github.io/posts/kolay-yoldan-flask.html</guid><pubDate>Sun, 19 Apr 2015 10:22:36 GMT</pubDate></item><item><title>Hanoi Kuleleri Algoritması</title><link>http://aligoren.github.io/posts/hanoi-tower-algorithm.html</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;strong&gt;Hanoi Kuleleri&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Hanoi kuleleri, Fransız matematikçi, &lt;a href="http://en.wikipedia.org/wiki/%C3%89douard_Lucas"&gt;Edouard Lucas&lt;/a&gt; tarafından önerilen bir çözüm yöntemidir. A,B ve C gibi dik konumda yerleştirilmiş üç çubuk ve N kadar disk içermektedir. İşleyiş şöyledir:&lt;/p&gt;
&lt;p&gt;Başlangıçta diskler, üstteki her diskin çapı daha büyük olmak şartıyla A çubuğuna yerleştirilir. Her seferinde sadece bir diskin hareketine izin verildiğinde, büyük disk, küçük diskin üzerine yerleştirilmeden, disklerin C çubuğuna taşınması gerekmektedir.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Towers of Hanoi" src="http://aligoren.github.io/galleries/towers_of_hanoi.png"&gt;&lt;/p&gt;
&lt;p&gt;Hanoi problemi, problem alt problemlere parçalanarak çözülebilir. Problemde N kadar disk olduğunu varsayarsak recursive şekilde bir çözüm şu şekilde olabilir: &lt;/p&gt;&lt;p&gt;&lt;a href="http://aligoren.github.io/posts/hanoi-tower-algorithm.html"&gt;Devamını oku…&lt;/a&gt; (2 dakikalık okuma)&lt;/p&gt;&lt;/div&gt;</description><category>algoritma</category><category>matematik</category><category>python</category><guid>http://aligoren.github.io/posts/hanoi-tower-algorithm.html</guid><pubDate>Tue, 14 Apr 2015 08:40:26 GMT</pubDate></item><item><title>Hamming Sayıları</title><link>http://aligoren.github.io/posts/hamming-numbers.html</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;strong&gt;Hamming Sayıları&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Hamming sayıları, 2,3 ve 5'ten başka diğer asal bölene sahip olmaya dizilerdir. Örnek verecek olursak hamming dizisi şöyledir.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;İlk 60 Hamming Sayısı:&lt;/strong&gt; 2 3 4 5 6 8 9 10 12 15 16 18 20 24 25 27 30 32 36 40 45 48 50 54 60... şeklinde gider.&lt;/p&gt;
&lt;p&gt;Sıradaki sayının bulunması üç farklı durumdan oluşmakta. Sayı 2'ye bölünebiliyorsa bir sonraki aşamada 2,3 ve 5 dışında böleni olmayacak.&lt;/p&gt;
&lt;p&gt;Örneğin şöyle izah edilebilir.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;hamming_numbers.py&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;is_hamming_numbers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;Bu sayede artık var olan sayı elimizdeki dizideki sayılardan birisi durumunda. Örneğin &lt;code&gt;60/2&lt;/code&gt; sonuç olarak 30 veriyor. Diziye baktığımızda 30'dan büyük ilk sayımız 32. Buna göre &lt;code&gt;2*32=64&lt;/code&gt; olmakta. Yani 60'tan sonra sayı 2'ye bölünebiliyorsa bu da &lt;code&gt;2*32=64&lt;/code&gt; olacaktır. Bu durum 3 ve 5 için de yine aynı şekilde anlaşılmaktadır.&lt;/p&gt;&lt;p&gt;&lt;a href="http://aligoren.github.io/posts/hamming-numbers.html"&gt;Devamını oku…&lt;/a&gt; (1 dakikalık okuma)&lt;/p&gt;&lt;/div&gt;</description><category>algoritma</category><category>matematik</category><category>python</category><guid>http://aligoren.github.io/posts/hamming-numbers.html</guid><pubDate>Mon, 13 Apr 2015 13:16:59 GMT</pubDate></item><item><title>E Sayısının Hesaplanması</title><link>http://aligoren.github.io/posts/euler-number-python.html</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;strong&gt;E Sayısını Tanıyalım&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;E sayısı ünlü bir irrasyonel sayıdır ve matematiğin en önemli sayılarındandır. 
E sayısı, ilk olarak İskoç Matematikçi &lt;strong&gt;John Napier&lt;/strong&gt; tarafından ortaya atılmıştır. Napier, E sayısını 1618 yılında yayınladığı logaritmalar kitabının
ekinde yayınlamıştır. Esasen dolaylı olarak bir değinme olmuş. E sayısının keşfi ise kitabın yayınlandığı tarihten çok daha sonraları gerçekleşmiş.
&lt;strong&gt;Jakob Bernoulli&lt;/strong&gt; 1683 yılında birleşik faiz problemini incelerken e sayıını keşfetmiş. Bu öyle bir sayı ki bir sürü kişi uğraşmış ama bu sayıya adını
Leonhard Euler vermiştir. E sayısı adını 1731 yılında almıştır. Euler sayısı, "&lt;em&gt;Oiler&lt;/em&gt;" olarak telafuz ediliyormuş.&lt;/p&gt;
&lt;p&gt;E sayısı aynı zamanda Doğal Logaritmanın da tabanını oluşturur. E sayısı ilginç noktalarda karşınıza çıkabileceği için öğrenmeye değer diye düşünüyorum.&lt;/p&gt;
&lt;p&gt;Bu kadar vikipedia yeterli sanırım. &lt;/p&gt;&lt;p&gt;&lt;a href="http://aligoren.github.io/posts/euler-number-python.html"&gt;Devamını oku…&lt;/a&gt; (1 dakikalık okuma)&lt;/p&gt;&lt;/div&gt;</description><category>algoritma</category><category>matematik</category><category>python</category><guid>http://aligoren.github.io/posts/euler-number-python.html</guid><pubDate>Sun, 12 Apr 2015 13:02:09 GMT</pubDate></item><item><title>Python ve C'de Fibonacci Sayıları</title><link>http://aligoren.github.io/posts/fibonacci-numbers.html</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;Fibonacci sayıları demek yerine Fibonacci dizisi demek daha mantıklı olabilirdi belki de. Mantık olarak yaptığı şey her sayının kendinden öncesiyle
toplanması sonucu ortaya çıkan toplamdır. Bu sayıları birbirleri ile oranladığımız zaman altın oran kavramı ortaya çıkar.&lt;/p&gt;
&lt;p&gt;Bu olayı test etmek açısından iki farklı dilde kod yazdım. Tabii birisinde sonuç öyle gecikti ki uğraşamadım ve bıraktım.
Python gerçekten aşırı yavaş bir şekilde sonuçları vermekte. C ve Python'un çalışma sürelerini görünce fark edilecek kadar bariz bir fark.&lt;/p&gt;&lt;p&gt;&lt;a href="http://aligoren.github.io/posts/fibonacci-numbers.html"&gt;Devamını oku…&lt;/a&gt; (1 dakikalık okuma)&lt;/p&gt;&lt;/div&gt;</description><category>algoritma</category><category>c</category><category>programlama</category><category>python</category><guid>http://aligoren.github.io/posts/fibonacci-numbers.html</guid><pubDate>Sat, 11 Apr 2015 23:54:57 GMT</pubDate></item><item><title>Programming Quotes</title><link>http://aligoren.github.io/posts/programming-quotes.html</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;Her yazılımcının ilham aldığı beğendiği sözler vardır. Bunlar felsefi olabilir ya da bir şarkı sözü olabilir. Kimi yazılımcıların da programcılar tarafından
söylenen sözleri beğenmişliği vardır. Bu kişilerden birisi de ben olduğum için yaptım diyelim. &lt;/p&gt;&lt;p&gt;&lt;a href="http://aligoren.github.io/posts/programming-quotes.html"&gt;Devamını oku…&lt;/a&gt; (1 dakikalık okuma)&lt;/p&gt;&lt;/div&gt;</description><category>python</category><guid>http://aligoren.github.io/posts/programming-quotes.html</guid><pubDate>Thu, 09 Apr 2015 21:14:52 GMT</pubDate></item></channel></rss>