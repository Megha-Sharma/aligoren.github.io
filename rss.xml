<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Ali GÖREN</title><link>http://aligoren.github.io/</link><description>Programlama Açık Kaynak Python Ruby PHP</description><atom:link rel="self" type="application/rss+xml" href="http://aligoren.github.io/rss.xml"></atom:link><language>tr</language><lastBuildDate>Fri, 22 May 2015 23:05:15 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>json-server ile Sahte REST API Geliştirme</title><link>http://aligoren.github.io/posts/json-server-ile-sahte-rest-api-gelistirme.html</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Representational_state_transfer"&gt;Rest&lt;/a&gt; API artık yazılım dünyasının vazgeçilmezleri arasında. Öyle ki iş ilanlarında sadece REST API yazacak kişiler aranıyor yazmakta.&lt;/p&gt;
&lt;p&gt;Bu kadar popüler olan bir konunun da elbet ki işleri kolaylaştıran araçları olmalıdır. Siz bir kolaylık arıyorsanız elbette bu kolaylığı sizin için sağlayacak kişiler de oluyor.&lt;/p&gt;
&lt;p&gt;Bu kolaylıklardan birisi de &lt;strong&gt;NodeJS&lt;/strong&gt; çatısı altında çalışan &lt;a href="https://github.com/typicode/json-server"&gt;json-server&lt;/a&gt;. json-server size basit sahte fake rest api geliştirme imkanı sağlıyor. Bunu hemen hemen hiç kod yazmadan yapmanıza imkan tanıyor. Sahte bir api dedik ancak eğer sağlanacak değerler belirli yani statik ise bu sahte olmaktan çıkıp sizin gerçek dünya uygulamanızda da yer alabilir. İsterseniz json-server kurulumunu gerçekleştirip bir örnek uygulama yapalım. Böylece daha iyi anlaşılır.&lt;/p&gt;
&lt;h2&gt;Kurulum&lt;/h2&gt;
&lt;p&gt;Kurulum npm üzerinden gerçekleşiyor.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm install -g json-server&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Burada &lt;strong&gt;-g&lt;/strong&gt; flag'i indirilen kütüphanenin executable yani çalıştırılabilir olmasına imkan sağlıyor. &lt;/p&gt;&lt;p&gt;&lt;a href="http://aligoren.github.io/posts/json-server-ile-sahte-rest-api-gelistirme.html"&gt;Devamını oku…&lt;/a&gt; (4 dakikalık okuma)&lt;/p&gt;&lt;/div&gt;</description><category>faker</category><category>json</category><category>json-server</category><category>lodash</category><category>nodejs</category><category>npm</category><category>rest</category><category>rest api</category><category>restful</category><guid>http://aligoren.github.io/posts/json-server-ile-sahte-rest-api-gelistirme.html</guid><pubDate>Fri, 22 May 2015 21:24:59 GMT</pubDate></item><item><title>x+=y Gibi Kullanım Neden İyi Bir Kullanımdır?</title><link>http://aligoren.github.io/posts/x-arti-esittir-y-neden-iyidir.html</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;Birçok programlama dilinde şöyle bir gösterime denk gelmişsiniz. Örneğin bir Python uygulamasında şöyle bir tanımlama vardır.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;Bu gösterim aslında şu gösterim gibidir.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;Bu bir steno gösterim olarak bilinir. Yani shorthand ya da kısa gösterim olarak bilinir. Peki bu neden iyi bir gösterim olarak kabul edilir? Yani neden bunu kullanmak iyidir?&lt;/p&gt;
&lt;p&gt;Öncelikle bunun bir kısaltma olmadığını yani shorthand olmadığını bilelim.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;+=&lt;/code&gt;, 70'li yıllarda C ile birlikte, C'nin makine kodlarına hitap eden akıllı bir assembler olması düşüncesi ile ortaya çıkmıştır. &lt;/p&gt;&lt;p&gt;&lt;a href="http://aligoren.github.io/posts/x-arti-esittir-y-neden-iyidir.html"&gt;Devamını oku…&lt;/a&gt; (2 dakikalık okuma)&lt;/p&gt;&lt;/div&gt;</description><category>assembly</category><category>c</category><category>programlama</category><category>programming</category><category>shorthand notation</category><category>steno</category><guid>http://aligoren.github.io/posts/x-arti-esittir-y-neden-iyidir.html</guid><pubDate>Thu, 21 May 2015 11:39:42 GMT</pubDate></item><item><title>NativeScript ile Mobil Uygulama Geliştirme</title><link>http://aligoren.github.io/posts/nativescript-ile-mobil-uygulama-gelistirme.html</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;Javascript ve CSS artık günümüzün vazgeçilmezleri arasında. Özellikle HTML5, CSS3 ve JavaScript ve V8 engine ile birlikte aşırı popüler olan bu diller tahmin edildiği gibi mobil dünyanın da vazgeçilmezleri.&lt;/p&gt;
&lt;p&gt;Özellikle büyük şirketler masaüstü platformlarını mobile de taşımakta kararlı durumdalar. Bunun için de mevcut platformlar yani iOS, Android ve Windows Phone için ayrı ayrı yazılımcılar aramaktalar. Eğer şansları varsa tek yazılımcı her platformda aynı nitelikte geliştirme yapabilir. Günümüzün en büyük ihtiyacı cross-platform geliştirme yapılabilmesi.&lt;/p&gt;
&lt;p&gt;NativeScript ise tam bu işi yapmak için var. Kendo UI'ın yapımcısı Telerik tarafından ortaya çıkarılmıştır.&lt;/p&gt;
&lt;p&gt;Benzerlerinin aksine NativeScript'i farklı kılan ise direkt donanım ile konuşabilmesi. Yani tarayıcının render mekanizması yerine cihazın donanımı ile direkt konuşmakta. NativeScript ile tek bir code base üzerinde cross-platform mobil uygulamalar geliştirebilirsiniz. &lt;/p&gt;&lt;p&gt;&lt;a href="http://aligoren.github.io/posts/nativescript-ile-mobil-uygulama-gelistirme.html"&gt;Devamını oku…&lt;/a&gt; (1 dakikalık okuma)&lt;/p&gt;&lt;/div&gt;</description><category>android</category><category>css</category><category>ios</category><category>javascript</category><category>native application</category><category>windows phone</category><guid>http://aligoren.github.io/posts/nativescript-ile-mobil-uygulama-gelistirme.html</guid><pubDate>Mon, 18 May 2015 16:45:47 GMT</pubDate></item><item><title>GoTime Golang Time Library</title><link>http://aligoren.github.io/posts/gotime-golang-time-library.html</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;Go dilinde yeni olduğumu biliyorsunuz. Dili öğrenirken dilin imkanları ile daha önce istediğim ama fırsatımın bir şeyi yapmayı düşündüm. Bir zaman kütüphanesi.&lt;/p&gt;
&lt;p&gt;Tam bir kütüphane sayılmaz aslında. Çünkü bir kütüphanenin sağladığı tüm özellikleri sağlıyor mu derseniz hayır sağlamıyor. Tanıtıma başlamadan önce kütüphaneye şuradan bakabilirsiniz:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kütüphane Linki:&lt;/strong&gt; &lt;a href="https://github.com/aligoren/gotime"&gt;https://github.com/aligoren/gotime&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Gotime GoDoc Linki:&lt;/strong&gt; &lt;a href="https://godoc.org/github.com/aligoren/gotime"&gt;https://godoc.org/github.com/aligoren/gotime&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GoTime, bugünü, dünü, yarını, saat, zaman gibi kavramları gösterdiği gibi belirli zaman aralığında bekleme işlemini de yapıyor. Bu bekleme işlemi 6 farklı şekilde isteğinize göre gerçekleşebilir. &lt;/p&gt;&lt;p&gt;&lt;a href="http://aligoren.github.io/posts/gotime-golang-time-library.html"&gt;Devamını oku…&lt;/a&gt; (2 dakikalık okuma)&lt;/p&gt;&lt;/div&gt;</description><category>go</category><category>golang</category><category>kutuphane</category><category>programlama</category><category>programming</category><guid>http://aligoren.github.io/posts/gotime-golang-time-library.html</guid><pubDate>Thu, 14 May 2015 10:10:51 GMT</pubDate></item><item><title>Go Arrays Slices Maps</title><link>http://aligoren.github.io/posts/go-arrays-slices-maps.html</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;Go dilinde 3 basit tip vardır. Bu yazıda bu üç built-in tipten bahsedeceğim. Bu tipler: arrays, slices ve maps'dir.&lt;/p&gt;
&lt;p&gt;Diğer dillerde olan map, array ve slices kavramı bu dilde de var. Tanımlanışları ve kullanışları itibariyle farklılıklar gösterseler de çalışma mantıkları aynı. &lt;/p&gt;&lt;p&gt;&lt;a href="http://aligoren.github.io/posts/go-arrays-slices-maps.html"&gt;Devamını oku…&lt;/a&gt; (5 dakikalık okuma)&lt;/p&gt;&lt;/div&gt;</description><category>arrays</category><category>go</category><category>golang</category><category>maps</category><category>programlama</category><category>programming</category><category>slices</category><guid>http://aligoren.github.io/posts/go-arrays-slices-maps.html</guid><pubDate>Sun, 10 May 2015 13:57:10 GMT</pubDate></item><item><title>Merhaba Go</title><link>http://aligoren.github.io/posts/merhaba-go.html</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;Bir süredir Go dili ile ilgili makaleler okuyorum. Aslında ben de yeni yeni bu dili tam anlamıyla öğrenmekteyim. Okula başlamadan önce çalıştığım yerdeki arkadaşlarım bütün dilleri araştırmamdan şikayetçi oluyorlardı.&lt;/p&gt;
&lt;p&gt;Bunları araştırmamda tabii ki sebep vardı. Nasıl işlerler ya da bu dilin tasarımcısı nasıl düşünür ne gibi yazılımcı ipuçları alabilirim diye merak ettim. Tek anlayamadığım dilse &lt;strong&gt;type system&lt;/strong&gt; olayını hala daha anlayamadığım Go dili oldu. Düşünce yapım hoş olmayabilir ama bir şeyi bilmiyor ya da anlamıyorsan onu öğrenerek bu eksikliğini giderebilirsin diye düşündüm. Özellikle hala daha &lt;strong&gt;type system&lt;/strong&gt; olayında karmaşık düşüncelere sahibim. Ekşi Sözlük'te dil hakkındaki bir entry'de &lt;a href="http://nathany.com/good/"&gt;Go Object Oriented Design&lt;/a&gt; makalesini gördüm. Kafamı karıştıran &lt;strong&gt;type system&lt;/strong&gt; olayı hakkında açıklamaları var. Dil nasıl ortaya çıkmış yine bunu dil geliştiricisi &lt;strong&gt;Rob Pike&lt;/strong&gt; amca &lt;a href="http://commandcenter.blogspot.com.tr/2012/06/less-is-exponentially-more.html"&gt;Less is exponentially more&lt;/a&gt; yazısında kaleme almış. &lt;/p&gt;&lt;p&gt;&lt;a href="http://aligoren.github.io/posts/merhaba-go.html"&gt;Devamını oku…&lt;/a&gt; (6 dakikalık okuma)&lt;/p&gt;&lt;/div&gt;</description><category>go</category><category>golang</category><category>programlama</category><category>programming</category><guid>http://aligoren.github.io/posts/merhaba-go.html</guid><pubDate>Tue, 05 May 2015 18:32:27 GMT</pubDate></item><item><title>Sublime Text'i Go IDE'sine Çevirin</title><link>http://aligoren.github.io/posts/sublime-text-golang-ide.html</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;Go dili programcıları arttıkça kaliteli editör, ide arayışları da aynı orantıda artmakta.&lt;/p&gt;
&lt;p&gt;Python, C, C++, Ruby, Java, PHP, Javascript gibi aklınıza gelebilecek diller için IDE bulmak kolay. Bu diller hem kendisini kanıtlamış hem de uzun geçmişe sahip olan diller.&lt;/p&gt;
&lt;p&gt;Eğer arkanızda Microsoft gibi dev yoksa o zaman Visual Studio gibi bir IDE bulmanız şans işi. Diğer firmaları da sıralayacak olursak JetBrains, Xamarin gibi firmalar da mevcut. Bu firmaların da kaliteli ürünleri olsa dahi aradığınız dil için özellikle sağladıkları bir destek yok. Yani buradan da arayış yapmanız pek bir kar sağlamıyor.&lt;/p&gt;
&lt;p&gt;Gelelim yeni nesil diller konusuna. Bu dillerde aslında yeni nesil olmayanlar var ama popülerliğin son yıllardaki artışına bakarak söylemek gerekiyor.&lt;/p&gt;
&lt;p&gt;D dili, Haskell, Erlang, CoffeeScript, Dart, Lua, R, Scala ve Go&lt;/p&gt;
&lt;p&gt;Bu dillerden en az birisini duymuşsunuzdur. Örneğin CoffeeScript eğer CoffeeScript için WebStorm olmamış olsaydı gerçekten ciddi destek sağlayan bir IDE yok. Fakat WebStorm da ücretli bir IDE olduğu için yine işiniz kullanıcıya kalıyor.&lt;/p&gt;
&lt;p&gt;Haskell'a gelelim. Eğer Leksah gibi bir IDE desteği olmamış olsaydı ki bunu kendisi sağlamıyor yine bir kullanıcı ürünü eğer bu destek olmamış olsaydı yine işiniz pek iyi değildi. &lt;/p&gt;&lt;p&gt;&lt;a href="http://aligoren.github.io/posts/sublime-text-golang-ide.html"&gt;Devamını oku…&lt;/a&gt; (2 dakikalık okuma)&lt;/p&gt;&lt;/div&gt;</description><category>go</category><category>ide</category><category>programlama</category><category>sublime</category><category>sublime text</category><guid>http://aligoren.github.io/posts/sublime-text-golang-ide.html</guid><pubDate>Mon, 04 May 2015 14:48:39 GMT</pubDate></item><item><title>Python ile Görsel Karşılaştırma</title><link>http://aligoren.github.io/posts/python-gorsel-karsilastirma.html</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;Görseller ve benzerlikleri daima ilgimi çekmiştir. Nasıl karşılaştırılırlar diye.
Benzerlik algoritmaları (örn: levenshtein) bu yüzden ilgimi çeker.
Görselleri karşılaştırırken bu algoritmalardan yararlanmak nedense aklımın ucundan dahi geçmedi.
Daha çok görselleri byte olarak okuyup bu byte'ları karşılaştırmayı düşündüm.
Python bunun için çeşitli kolaylıklar sağlamakta. Örneğin kendisi hazır built-in fonksiyonlar dahi sunmakta.&lt;/p&gt;
&lt;p&gt;Bu fonksiyonlardan birisi &lt;code&gt;filecmp&lt;/code&gt; modülü. Bu modülün &lt;code&gt;cmp&lt;/code&gt; işlevi bulunmakta. Bu işlev file comparasion işlemi yapmakta.
Yani dosya karşılaştırma işlevi. Örneği şöyle iki adet görsel var elimizde: &lt;/p&gt;&lt;p&gt;&lt;a href="http://aligoren.github.io/posts/python-gorsel-karsilastirma.html"&gt;Devamını oku…&lt;/a&gt; (1 dakikalık okuma)&lt;/p&gt;&lt;/div&gt;</description><category>compare</category><category>comparing</category><category>image</category><category>pil</category><category>pillow</category><category>programlama</category><category>python</category><guid>http://aligoren.github.io/posts/python-gorsel-karsilastirma.html</guid><pubDate>Fri, 01 May 2015 17:23:22 GMT</pubDate></item><item><title>Python ve Asyncio</title><link>http://aligoren.github.io/posts/python-ve-asyncio.html</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;Bu yazıda Python'ın bir kütüphanesini tanıtacağım. Aslında varlığından haberdar olsam da araştırmalarım kısa süre önce başladı. Kısa süre önce Guido ile
twitter üzerinden şu sistem nasıl yapılır, bu sistem nasıl yazılır gibi sohbet soru-cevap &lt;a href="https://twitter.com/gvanrossum/status/588112508042502144"&gt;yapıyorduk&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;O da bana X benzeri bir sistemi yazmak istiyorsan, o konuda X kadar yıl tecrübe edip eksiğini gediğini görmen lazım dedi. Yani onu anlaman lazım dedi.
Eğer onu anlarsam o konuda kendimi geliştirebilirmişim. Daha sonra ise kendisine kendisinin favori kütüphanesinin ne olduğunu sormaya çalıştım
fakat &lt;strong&gt;our&lt;/strong&gt; olarak yazmışım klavye azizliği neyse işte sordum.
Kendisi bana &lt;a href="https://github.com/python/asyncio"&gt;asyncio&lt;/a&gt; kütüphanesini &lt;a href="https://twitter.com/gvanrossum/status/588165930301132800"&gt;önerdi&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Daha sonra bu kütüphaneyi araştırmaya başladım. Anladığım kadarını aktarmaya çalışayım. Yanlış bilgilendirmelerim olursa düzeltme gelirse sevirim :)&lt;/p&gt;
&lt;h3&gt;Asenkron Programlama Nedir?&lt;/h3&gt;
&lt;p&gt;Bir uygulama olduğunu düşünün. Bu uygulama aynı anda birden fazla işlem yapmak zorunda. Eğer bu tarz bir uygulamaya sahipseniz asenkron(asynchronous) yani
eşzamansız programlama tam ihtiyacınız olan konu.&lt;/p&gt;
&lt;p&gt;I/O işlemleri yapılırken, tek bir thread, o işlemin sonucunu beklemekle uğraşmaz. Bu esnada başka işler de yapılır.
Paralel programlama ile karıştırılmaması gerekmekte. Çünkü paralel programlama I/O işlemi olup olmadığına bakmaksızın her şey paralel olarak çalıştırır.
Bu durumdan dolayı da paralel yapılması gereken işlemler için fazladan thread gerekir. Eğer işlemci thread sayısına yetecek kadar çekirdeğe sahip değilse
aynı çekirdek daha fazla thread arasında dolaşmak zorunda kalır bu da performansı olumsuz etkiler. &lt;/p&gt;&lt;p&gt;&lt;a href="http://aligoren.github.io/posts/python-ve-asyncio.html"&gt;Devamını oku…&lt;/a&gt; (4 dakikalık okuma)&lt;/p&gt;&lt;/div&gt;</description><category>asyncio</category><category>network</category><category>programlama</category><category>python</category><guid>http://aligoren.github.io/posts/python-ve-asyncio.html</guid><pubDate>Thu, 30 Apr 2015 20:56:13 GMT</pubDate></item><item><title>Instagram forgot to renew its SSL Certificate</title><link>http://aligoren.github.io/posts/instagram-forgot-to-renew-its-ssl-certificate.html</link><dc:creator>Ali</dc:creator><description>&lt;div&gt;&lt;p&gt;Instagram’s website is showing a error right now for many users that the company’s security certificate is invalid.&lt;/p&gt;
&lt;h3&gt;Error Screenshots&lt;/h3&gt;
&lt;p&gt;&lt;img alt="Error" src="http://aligoren.github.io/galleries/instagram_ssl.PNG"&gt;&lt;/p&gt;
&lt;p&gt;Also you can see error on chrome.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Error" src="http://aligoren.github.io/galleries/instagram_ssl2.PNG"&gt;&lt;/p&gt;
&lt;p&gt;Instagram’s mobile apps seem to be working without issues so the problem just affects the company’s web interface. 
Evidently even the biggest companies forget to renew their certificates occasionally.&lt;/p&gt;&lt;/div&gt;</description><category>bug</category><category>instagram</category><category>news</category><category>ssl</category><category>technologies</category><category>web</category><guid>http://aligoren.github.io/posts/instagram-forgot-to-renew-its-ssl-certificate.html</guid><pubDate>Thu, 30 Apr 2015 13:28:37 GMT</pubDate></item></channel></rss>